1
00:00:00,000 --> 00:00:02,750
Hello everyone, welcome to CS 421.

2
00:00:02,750 --> 00:00:04,935
In this video, I want to talk about a few things.

3
00:00:04,935 --> 00:00:08,145
I want to talk a little bit about the logistics of this course.

4
00:00:08,145 --> 00:00:11,390
In particular, some of the assignments and exams.

5
00:00:11,390 --> 00:00:13,125
We do things a little bit differently.

6
00:00:13,125 --> 00:00:15,930
Also, I want to talk about the course objectives,

7
00:00:15,930 --> 00:00:17,995
the kinds of things we hope you learn.

8
00:00:17,995 --> 00:00:20,760
We want to talk about why we want to study languages in

9
00:00:20,760 --> 00:00:23,710
the first place and some of the major themes for the course.

10
00:00:23,710 --> 00:00:27,840
Hopefully, you will end up really excited about what comes next.

11
00:00:27,840 --> 00:00:29,190
So, a little bit about me.

12
00:00:29,190 --> 00:00:30,575
My name is Mattox Beckman,

13
00:00:30,575 --> 00:00:32,690
I think you probably read that by now.

14
00:00:32,690 --> 00:00:37,130
I got my PhD in 2003 from the University of Illinois at Urbana,

15
00:00:37,130 --> 00:00:39,170
and then spent more than a few years at

16
00:00:39,170 --> 00:00:42,740
the Illinois Institute of Technology in Chicago teaching there,

17
00:00:42,740 --> 00:00:47,115
before coming back to the University of Illinois in late 2015.

18
00:00:47,115 --> 00:00:48,280
My main research area,

19
00:00:48,280 --> 00:00:49,930
CS Education these days,

20
00:00:49,930 --> 00:00:52,345
but my training is in Programming Languages.

21
00:00:52,345 --> 00:00:55,420
My specialty was Partial Evaluation and Functional Programming.

22
00:00:55,420 --> 00:00:58,955
One of the things I'm known for is having an awful lot of hobbies.

23
00:00:58,955 --> 00:01:00,860
So, here's some of them that I have now.

24
00:01:00,860 --> 00:01:02,260
That's the list this year,

25
00:01:02,260 --> 00:01:05,445
if you come back next year the list may well be different,

26
00:01:05,445 --> 00:01:06,845
not enough about me.

27
00:01:06,845 --> 00:01:10,550
One of the features of this course is the thing called Machine Problems.

28
00:01:10,550 --> 00:01:13,910
There are these large programming assignments that you will do,

29
00:01:13,910 --> 00:01:16,925
they will collectively be worth about 15%.

30
00:01:16,925 --> 00:01:20,060
Now, one of the things that I believe strongly is that,

31
00:01:20,060 --> 00:01:23,615
it's actually useful for you if you can get help while you're programming.

32
00:01:23,615 --> 00:01:28,400
So, if you want to program with someone else and collaborate together, I allow that,

33
00:01:28,400 --> 00:01:31,900
because I myself learned to program by typing in other people's programs,

34
00:01:31,900 --> 00:01:33,960
and I thought that was just very efficient.

35
00:01:33,960 --> 00:01:35,990
So, I only have two requests for you.

36
00:01:35,990 --> 00:01:38,190
One is you must cite your sources,

37
00:01:38,190 --> 00:01:41,700
if we check and we saw you got something and didn't cite it,

38
00:01:41,700 --> 00:01:43,115
we will not be happy with you.

39
00:01:43,115 --> 00:01:46,805
The other thing that I request which obviously we cannot check is that,

40
00:01:46,805 --> 00:01:48,280
whatever help you did get,

41
00:01:48,280 --> 00:01:49,675
don't use copy paste,

42
00:01:49,675 --> 00:01:52,555
please let the code come out of your own fingertips,

43
00:01:52,555 --> 00:01:54,070
print it out, type it in,

44
00:01:54,070 --> 00:01:55,800
verbatim if he have to.

45
00:01:55,800 --> 00:02:00,380
But the fact that you type it yourself actually helps you learn it a lot better.

46
00:02:00,380 --> 00:02:02,780
So, you can see the syllabus for more details about

47
00:02:02,780 --> 00:02:07,070
the exact number and the topics of each of the machine problems.

48
00:02:07,070 --> 00:02:10,870
To keep you honest, we have a kind of exam called a Machine Lab.

49
00:02:10,870 --> 00:02:13,520
For each MP, there may be

50
00:02:13,520 --> 00:02:17,270
a separate quiz where we take either the solution to the machine problem,

51
00:02:17,270 --> 00:02:19,070
or perhaps a solution to

52
00:02:19,070 --> 00:02:22,525
a similar machine problem where we change things up just a little bit.

53
00:02:22,525 --> 00:02:24,080
The idea is if you actually did

54
00:02:24,080 --> 00:02:27,080
the machine problem and learned what you're supposed to learn from doing it,

55
00:02:27,080 --> 00:02:30,020
then this will actually be very straightforward and very simple.

56
00:02:30,020 --> 00:02:31,825
If you did not however,

57
00:02:31,825 --> 00:02:33,730
you're going to have a rough hour.

58
00:02:33,730 --> 00:02:35,865
Now, for the exams,

59
00:02:35,865 --> 00:02:39,790
we want to use those as a way of measuring your mastery of the material.

60
00:02:39,790 --> 00:02:43,730
So, what I do, is I divide the exams into proficiency units.

61
00:02:43,730 --> 00:02:46,190
So, there'll be two midterms 20% each,

62
00:02:46,190 --> 00:02:47,980
they'll all have these proficiency units.

63
00:02:47,980 --> 00:02:49,970
For example, there might be one on recursion,

64
00:02:49,970 --> 00:02:52,110
there might be one on high-order functions.

65
00:02:52,110 --> 00:02:53,660
On the final exam,

66
00:02:53,660 --> 00:02:56,120
some of these proficiency units will reappear,

67
00:02:56,120 --> 00:02:58,740
there'll be different questions but they'll be the same topic.

68
00:02:58,740 --> 00:03:00,750
What I do about that is,

69
00:03:00,750 --> 00:03:02,540
if your score on the final exam,

70
00:03:02,540 --> 00:03:04,775
when that proficiency unit improves,

71
00:03:04,775 --> 00:03:11,130
then I will back fill that score into the proficiency unit for the corresponding midterm.

72
00:03:11,130 --> 00:03:13,900
So, some classes have what they call second chance exam.

73
00:03:13,900 --> 00:03:15,565
So, this is kind of like that.

74
00:03:15,565 --> 00:03:17,180
So, on the final exam,

75
00:03:17,180 --> 00:03:20,130
if anything gets repeated and your score improves as a result,

76
00:03:20,130 --> 00:03:23,630
then that actually will improve your score on the whole thing.

77
00:03:23,630 --> 00:03:27,905
So, let's talk about why we want to study programming languages in the first place.

78
00:03:27,905 --> 00:03:29,660
I have three examples here.

79
00:03:29,660 --> 00:03:31,740
One is a word called Pai sei,

80
00:03:31,740 --> 00:03:35,410
another is an article from Paul Graham called Beating the Averages,

81
00:03:35,410 --> 00:03:39,325
and another is just an observation about human language is called Language Families.

82
00:03:39,325 --> 00:03:41,350
So, let's talk about Language Families first.

83
00:03:41,350 --> 00:03:45,290
One thing that you'll notice if you study a lot of foreign languages is that,

84
00:03:45,290 --> 00:03:46,790
they tend to come in groups.

85
00:03:46,790 --> 00:03:50,690
So, for example, there's a set of languages called the romance languages,

86
00:03:50,690 --> 00:03:54,105
not because they talk about love but because they're both from Rome,

87
00:03:54,105 --> 00:03:56,240
so the Latin based languages.

88
00:03:56,240 --> 00:03:58,280
What I mean by this is language like French,

89
00:03:58,280 --> 00:03:59,600
and Italian, and Spanish,

90
00:03:59,600 --> 00:04:01,675
and Portuguese. So, here's a thing.

91
00:04:01,675 --> 00:04:04,939
Because they were all derived in part from Latin,

92
00:04:04,939 --> 00:04:07,395
they all share a bunch of the same rules.

93
00:04:07,395 --> 00:04:09,825
If you learn French and Spanish,

94
00:04:09,825 --> 00:04:11,570
you actually know enough vocabulary,

95
00:04:11,570 --> 00:04:13,820
enough structure that you can read Italian

96
00:04:13,820 --> 00:04:16,140
and make good sense out of what you're reading.

97
00:04:16,140 --> 00:04:19,095
It's all because these are all part of the same language family.

98
00:04:19,095 --> 00:04:21,920
Now, if you want to learn a language that's not part of the language family,

99
00:04:21,920 --> 00:04:24,360
let's say Korean, it doesn't work,

100
00:04:24,360 --> 00:04:26,020
it doesn't help you very much at all.

101
00:04:26,020 --> 00:04:28,655
The vocabulary is based on a different system,

102
00:04:28,655 --> 00:04:30,765
the way verbs are handled are different,

103
00:04:30,765 --> 00:04:32,990
even the way the sentence is structured is very

104
00:04:32,990 --> 00:04:35,100
different than they are in the Romance languages.

105
00:04:35,100 --> 00:04:38,345
So, it's a lot more work to learn those sorts of languages.

106
00:04:38,345 --> 00:04:41,160
Programming languages have the same dynamic.

107
00:04:41,160 --> 00:04:43,490
If you know C, C++,

108
00:04:43,490 --> 00:04:46,115
you can learn Java very, very quickly.

109
00:04:46,115 --> 00:04:49,370
But if you go outside of that language family into languages like,

110
00:04:49,370 --> 00:04:51,335
Haskell or Prologue which are

111
00:04:51,335 --> 00:04:55,130
very different language families and the one that C++ is part of,

112
00:04:55,130 --> 00:04:59,300
it's a much more difficult task because the concepts,

113
00:04:59,300 --> 00:05:02,030
even what a programming language is, has changed.

114
00:05:02,030 --> 00:05:04,340
So, one of the things that we hope to do in this course,

115
00:05:04,340 --> 00:05:07,520
is to show you a wide variety of language families,

116
00:05:07,520 --> 00:05:10,220
so that you'll have more choices when

117
00:05:10,220 --> 00:05:13,375
you go to pick a programming language or learn a new language.

118
00:05:13,375 --> 00:05:15,355
So, let's talk about this word Pae Sei,

119
00:05:15,355 --> 00:05:16,810
it's a Taiwanese word.

120
00:05:16,810 --> 00:05:19,820
If you look it up in a dictionary or ask someone,

121
00:05:19,820 --> 00:05:22,400
they'll probably say it means embarrassed or shy,

122
00:05:22,400 --> 00:05:28,635
which isn't wrong, but it also doesn't quite capture the full nuance that this word has.

123
00:05:28,635 --> 00:05:30,510
If you happen to know Mandarin,

124
00:05:30,510 --> 00:05:32,155
the word is bu hao yi si.

125
00:05:32,155 --> 00:05:33,625
If you know Cantonese,

126
00:05:33,625 --> 00:05:35,325
it could be hak hei.

127
00:05:35,325 --> 00:05:40,255
Probably, the best translation I've seen was from a Jackie Chan movie,

128
00:05:40,255 --> 00:05:45,030
where the protagonist was staying over someone's house and the host said to him,

129
00:05:45,030 --> 00:05:48,590
mohak hei, which means don't be pae sei or don't be bashful.

130
00:05:48,590 --> 00:05:52,010
Literally, what they translated into subtitles was, make yourself at home.

131
00:05:52,010 --> 00:05:54,685
This is perfect translation in that context.

132
00:05:54,685 --> 00:05:56,200
So, to illustrate this,

133
00:05:56,200 --> 00:05:58,970
I'm going to tell a story about what will happen if you're at

134
00:05:58,970 --> 00:06:02,210
a restaurant and there's two Chinese families eating together,

135
00:06:02,210 --> 00:06:04,030
I mean there's not just one Chinese culture.

136
00:06:04,030 --> 00:06:08,580
But, let's say they're part of the culture where this word is something that is useful.

137
00:06:08,580 --> 00:06:11,990
So, what happens is they have a great time eating together and then at

138
00:06:11,990 --> 00:06:15,500
the end there's this glorious battle over who gets to pay the bill,

139
00:06:15,500 --> 00:06:16,910
and it's amazing to watch.

140
00:06:16,910 --> 00:06:20,240
So, everyone knows the I'm going to the bathroom tricks,

141
00:06:20,240 --> 00:06:22,040
so if you try to go to the bathroom,

142
00:06:22,040 --> 00:06:23,270
you will get an escort.

143
00:06:23,270 --> 00:06:26,840
I've literally seen it happen where one person is running for the cash register,

144
00:06:26,840 --> 00:06:30,289
and another person from the other family is blocking them with their body,

145
00:06:30,289 --> 00:06:33,880
while a third person is trying to run around the two of them and get their first.

146
00:06:33,880 --> 00:06:38,220
It's pretty amazing, there's this big back and forth no you paid last time,

147
00:06:38,220 --> 00:06:40,440
no it's my turn this kind of thing.

148
00:06:40,440 --> 00:06:42,045
Finally, somebody wins.

149
00:06:42,045 --> 00:06:43,505
Now, bear in mind,

150
00:06:43,505 --> 00:06:45,920
no one actually wants to pay for the meal,

151
00:06:45,920 --> 00:06:49,900
but in this particular system you don't split the bill,

152
00:06:49,900 --> 00:06:51,135
do you just don't do that.

153
00:06:51,135 --> 00:06:52,575
So, to be polite,

154
00:06:52,575 --> 00:06:54,000
you have to offer to pay.

155
00:06:54,000 --> 00:06:56,020
So, finally, everyone goes home,

156
00:06:56,020 --> 00:06:57,690
someone has won the battle.

157
00:06:57,690 --> 00:06:59,210
Then, the other family,

158
00:06:59,210 --> 00:07:02,810
the kid reaches their hand into their coat pocket and finds a lot of money,

159
00:07:02,810 --> 00:07:04,955
it's been stuffed in there by the other family.

160
00:07:04,955 --> 00:07:06,590
The point of this is,

161
00:07:06,590 --> 00:07:08,270
in this particular context,

162
00:07:08,270 --> 00:07:10,970
there is this culture where this happens,

163
00:07:10,970 --> 00:07:12,810
and so there's a word to describe it.

164
00:07:12,810 --> 00:07:15,400
So, the language and culture has grown together.

165
00:07:15,400 --> 00:07:19,525
Also, if you're trying to explain this dynamic to an American audience,

166
00:07:19,525 --> 00:07:20,590
it takes some time,

167
00:07:20,590 --> 00:07:24,815
you have to explain all the dynamics and you have left an awful lot of stuff out,

168
00:07:24,815 --> 00:07:27,095
and there's a lot of disclaimers and nuances.

169
00:07:27,095 --> 00:07:32,590
But in Chinese, we have a word for this because it's something that comes up.

170
00:07:32,590 --> 00:07:35,600
In American English we do not because it doesn't come up,

171
00:07:35,600 --> 00:07:37,855
it's just not part of how things are done.

172
00:07:37,855 --> 00:07:41,370
This dynamic also expresses itself in programming languages.

173
00:07:41,370 --> 00:07:43,360
Certain languages have, for example,

174
00:07:43,360 --> 00:07:46,730
classes for objects because it's something that comes up,

175
00:07:46,730 --> 00:07:49,760
but if you're in a language that doesn't have them but you want to use them,

176
00:07:49,760 --> 00:07:52,305
it's actually very difficult, you can still do it,

177
00:07:52,305 --> 00:07:55,685
I'll show you how, but it takes more time.

178
00:07:55,685 --> 00:07:58,670
A very important article written by

179
00:07:58,670 --> 00:08:01,890
George Orwell is called Politics in the English Language,

180
00:08:01,890 --> 00:08:04,525
and it's linked on the website,

181
00:08:04,525 --> 00:08:07,000
I urge you to read it, it's not that long.

182
00:08:07,000 --> 00:08:09,170
George Orwell talked a lot about

183
00:08:09,170 --> 00:08:13,450
how language and thought inform each other and influence each other.

184
00:08:13,450 --> 00:08:16,010
He thought you could actually control how people think by

185
00:08:16,010 --> 00:08:19,630
controlling the language that people used, and vice versa.

186
00:08:19,630 --> 00:08:20,960
So, this is a very important essay,

187
00:08:20,960 --> 00:08:24,875
you probably more familiar with this books like 1984 Animal Farm,

188
00:08:24,875 --> 00:08:29,420
but this one is a lot shorter and much more to the point, it's not fiction.

189
00:08:29,420 --> 00:08:33,770
Another article which is very interesting is called Beating the Averages by Paul Graham.

190
00:08:33,770 --> 00:08:35,930
One of the things he writes about is how,

191
00:08:35,930 --> 00:08:37,930
if you have a language that you're using,

192
00:08:37,930 --> 00:08:39,530
let's say it's C++,

193
00:08:39,530 --> 00:08:42,020
and then you come across another language which is

194
00:08:42,020 --> 00:08:45,379
less powerful than that like say Assembly or C,

195
00:08:45,379 --> 00:08:49,400
it's going to be very clear to you very quickly that the language you're using, C++,

196
00:08:49,400 --> 00:08:52,720
is much more powerful than one of these other languages,

197
00:08:52,720 --> 00:08:54,895
because you notice that features are missing.

198
00:08:54,895 --> 00:08:57,590
However, the opposite doesn't happen.

199
00:08:57,590 --> 00:09:02,029
If you look at a more powerful language and there are plenty out there,

200
00:09:02,029 --> 00:09:04,520
that have features that your language doesn't have,

201
00:09:04,520 --> 00:09:08,010
and it's actually very difficult for you to notice that up front.

202
00:09:08,010 --> 00:09:11,910
Because what happens is you notice all these funny language constructs,

203
00:09:11,910 --> 00:09:15,350
or maybe the language doesn't do things the way I'm used to doing them.

204
00:09:15,350 --> 00:09:18,665
So, you'll tend to dismiss the more powerful language because you're

205
00:09:18,665 --> 00:09:22,620
just not able to see the more powerful thing that it's able to offer you.

206
00:09:22,620 --> 00:09:25,460
So, this course, we're going to have four major parts to it,

207
00:09:25,460 --> 00:09:28,160
the first part is about Functional Programming.

208
00:09:28,160 --> 00:09:30,995
You will learn, there's Functional Programming language called Haskell,

209
00:09:30,995 --> 00:09:33,990
we're going to have another video about that after this one.

210
00:09:33,990 --> 00:09:38,630
You're going to learn how to build interpreters for different languages in this language.

211
00:09:38,630 --> 00:09:41,615
The next thing we'll talk about is Parsing.

212
00:09:41,615 --> 00:09:43,914
When you type in, your computer program,

213
00:09:43,914 --> 00:09:45,890
your interpreter has to read that in and

214
00:09:45,890 --> 00:09:47,930
turn it into a data structure that make sense of it all.

215
00:09:47,930 --> 00:09:49,270
So, you'll learn how to do that.

216
00:09:49,270 --> 00:09:51,480
We're going to talk about some Mathematical Foundations

217
00:09:51,480 --> 00:09:53,605
and that'll take two different shapes,

218
00:09:53,605 --> 00:10:00,435
there's some programming constructs in Haskell which are based on some category theory.

219
00:10:00,435 --> 00:10:02,020
We're not going to teach you category theory,

220
00:10:02,020 --> 00:10:03,620
we're just going to reference it,

221
00:10:03,620 --> 00:10:06,530
but we're going to teach you some of these constructs that will inspired them.

222
00:10:06,530 --> 00:10:09,320
Then, later on, we're also going to talk about how to

223
00:10:09,320 --> 00:10:12,110
mathematically to find the meaning of a language,

224
00:10:12,110 --> 00:10:15,675
and a series of lectures based on something called Semantics.

225
00:10:15,675 --> 00:10:19,120
Finally, we're going to talk about something called Pragmatics.

226
00:10:19,120 --> 00:10:22,280
So, when you go to write a language or choose a languages,

227
00:10:22,280 --> 00:10:25,100
different design decisions you may have available to you,

228
00:10:25,100 --> 00:10:27,140
we're going to talk about the consequences of each

229
00:10:27,140 --> 00:10:29,765
one and why you might want to choose one over another.

230
00:10:29,765 --> 00:10:31,720
So, what should you learn from this course?

231
00:10:31,720 --> 00:10:34,670
We want you to know about major classes of programming languages,

232
00:10:34,670 --> 00:10:38,950
we want you be able to pick any language appropriate for a task that you have in mind.

233
00:10:38,950 --> 00:10:44,210
So, let's say you decided that your software project needed a scripting language,

234
00:10:44,210 --> 00:10:49,339
I would like you to be able to pick the right scripting language for your project,

235
00:10:49,339 --> 00:10:51,720
be confident that it's the right choice,

236
00:10:51,720 --> 00:10:54,380
and then maybe that language isn't really available for you,

237
00:10:54,380 --> 00:10:57,770
so I'd like you to be able to implement it yourself, to say,

238
00:10:57,770 --> 00:10:59,050
"We don't have that on our system,

239
00:10:59,050 --> 00:11:00,710
no problem, give me a few days,

240
00:11:00,710 --> 00:11:02,100
I'll write it up."

241
00:11:02,100 --> 00:11:05,360
We also want you to be able to look at the formal specifications of languages,

242
00:11:05,360 --> 00:11:09,140
to be able to read it and implement a language as a result,

243
00:11:09,140 --> 00:11:13,240
or even to take a language and write a formal specification,so for example,

244
00:11:13,240 --> 00:11:14,995
maybe you had to make your own language,

245
00:11:14,995 --> 00:11:16,320
like you build a write out,

246
00:11:16,320 --> 00:11:18,810
what it means so that other people could implement it too.

247
00:11:18,810 --> 00:11:23,520
Some very powerful ideas are here, recursion, abstraction, transformation,

248
00:11:23,520 --> 00:11:26,490
be able to transform one computer programming in to another,

249
00:11:26,490 --> 00:11:29,765
that maybe does the same thing but has some nicer properties.

250
00:11:29,765 --> 00:11:31,670
There's something called Unification which is

251
00:11:31,670 --> 00:11:34,685
a backbone to a lot of the mathematics we'll talk about.

252
00:11:34,685 --> 00:11:37,175
So, we're going to do a lot of theory in this course but I

253
00:11:37,175 --> 00:11:40,310
hope that you see the theories being very practical,

254
00:11:40,310 --> 00:11:44,830
that the theory can be used to help you do the things you want to do with your languages.

255
00:11:44,830 --> 00:11:48,395
So, here are a few of the articles that I mentioned earlier,

256
00:11:48,395 --> 00:11:49,715
hope you'll look them up,

257
00:11:49,715 --> 00:11:52,950
they'll be linked also in the course website.