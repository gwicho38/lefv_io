Welcome to this demonstration of the OpenRefine tool. In this particular demonstration, we want to look at a new dataset. So we had previously looked at Farmers Market dataset and in this case, we want to look at another data set from the New York Public Library and the menus that were collected in a crowdsourcing effort. And this dataset is a little bit more messy than the Farmers Markets data. And we'll also look at some advanced operations with this dataset. So first, we have to create a project. As before, we're gonna import a file. So the file here has already downloaded to the desktop. It's called menu.csv. It was earlier downloaded from the New York Public Library dataset. So we're gonna choose a file. We go to the Desktop. We say menu.csv, open that, and then hit the next button. And OpenRefine gives us here a preview of how the data is currently understood by the OpenRefine tool. So we see that the headers have already been identified, there's an ID, a name, a sponsor, an event. And then there are all these different rows. So this seems to have worked just fine. And so we could look in more detail into the parsing options. But since the preview indicates that everything is fine, we can just create the project. Maybe before creating the project, we want to rename the project into something slightly more meaningful. Maybe we want to call it New York Public Library menu or menus dot csv. So this indicates where the data came from, and it's a little bit more meaningful name. Let's create this project. And just like previously with the Farmers Markets data, we see a number of rows have been imported and we get a first overview of the data here. Now, let's start to clean a particular column. Let's have a look, for example, at the event column, describing what the event is. So as usual, we click here on the little triangle next to the column name. We select the Facet, and then we could, for example, work with a Text facet. Maybe for good practice, let's just start with a common transformation, maybe first. So, we can look at Edit cells, Transform, Common transform, and then there's things like leaping, trimming the leading, and trailing white spaces. This is often a good standard operation we can do. In this particular case, there were only three cells updated. That means our data was fairly clean with respect to trailing and leaving white spaces, so let's have another look at these common transformations. So Edit cells, Common transformations. How about collapsing consecutive whitespace? What is that? That is when two or more whitespace characters, such as blanks, are together in that column, they will be collapsed into a single one. Let's see what happens here. And we see here, there were six cells, now, updated again. That's not a lot. So our data seems to be fairly clean with respect to these little syntactic variations. Now let's have a look, though, at the Text facet, and this gives us an idea, when we look at this column as a text, what other values showing up in that particular column. So we have about 17,000 rows overall in this dataset, and there are 1,700 or so choices of values. So clearly, certain values must occur more common. So we can sort this particular widget here by count, and we see, for example, that in this column, the event column DINNER is the most frequent term. It occurs 1,827 times. BREAKFAST, 830 times. LUNCHEON, 532 and so on. Now, we also notice as we scroll down, that there are variant spellings. For example, here, something called ANNUAL DINNER. Should that be fused together, is that the same as DINNER? Or here's DINNER in brackets. So we see there's lots of different data values or DINNER written in lower case. That would be nice if they were clustered together and then replaced with a canonical name. So this is one of the main functions that OpenRefine is really good at. So in order to invoke that feature, we click on the Cluster button. And then OpenRefine will employ one of different methods. For example, here, key collision and using a particular keying function, in this case fingerprint, in order to build clusters of terms that OpenRefine suggests that might refer to the same entity, for example, dinner. And indeed we see here that all of these different dinner values look as if they should be put into canonical form, maybe you want to write it as capital DINNER and merge all of these different values. So we have 2,148 row counts. We have 14 different ways of spelling dinner, and we can now click on this button here on the bottom, merge the selected, you know, the selected clusters and then re-cluster. And, so a number of changes were made. And we will can later see what those changes were. And we can now keep going and cluster additional groups of values here. Now, one particular feature I want to show with this dataset is maybe we were a little bit too quick in clustering all of these dinner entries. So let's go back. We can go to the history and see what have we done so far. We did some simple text transformations and then we did a mass edit of 2,148 cells. So we made all these changes. We can look at what these changes were. So if we select here from the history only the mass edit in column events, we can now see that these values have all been replaced with the canonical name. So that's very helpful. As we inspect this, however, we are having second thoughts and think, well, wherever there was a question mark, maybe this indicates that whoever entered the data wasn't quite sure themselves whether this was dinner or not. So maybe what we should do instead of clustering all of that and asserting this is definitely a dinner entry, maybe we should only do this for the values that do not have question mark in them. So let's do that. So let's go basically back to our earlier datasets, so we're gonna undo this step. And how do we undo this? Well, we basically clicked back here on the second level, to the second step, and then we go back here to our dataset, and then we cluster once again by the Text facet here. And if we had, actually we just did this before so we can still use this previous facet and hit Cluster. And we see our dinner values are back. Now, how would I go about selecting only some of these and not the others? So there are different ways to go about doing this. I'll show you one particular. So, if I know I want to update this particular cluster from the event column, the one for dinners, and I want to only include the values that do not have a question mark, here's one way I can do this. I can say I want to just browse this particular cluster. And you see, a new tab was opened, and now we have only 2,148 matching rows. So we're working with this subset of 2,148 matching rows, and we can now look more closely by once again selecting the event Text facet. You see, we have only now these dinner values show up here. If we decide -- let me see what I can move this up here a little bit -- if we decide that we should only include dinner values that do not have a question mark, then we can do as follows. We just say, okay well, dinner occurs 1,800 times, we want to include that. Also, this one. And so we keep selecting those that we want to include, but we skipp the ones that have a question mark. So DINNER?, maybe we're not quite sure here whether we should include this. So we're going to skip all of these and just include the ones that do not have a question mark. Okay? Now that we've done this, if we hit the Cluster button one more time, we see only a smaller subset now of 2,134 rows has been selected, and maybe it is only these that we want to merge and call them DINNER, or these are maybe the definite dinner events. And so, we've done these. And then maybe the other ones we can, in a separate step, inspect or maybe replace them with another value called tentative dinner or possibly dinner to indicate that we're not quite sure about these particular values. All right, so this is our first exploration of the New York Public Library dataset using OpenRefine.