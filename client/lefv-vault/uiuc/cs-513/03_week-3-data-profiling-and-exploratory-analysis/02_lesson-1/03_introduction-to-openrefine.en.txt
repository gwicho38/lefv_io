Welcome to Theory and Practice of Data Cleaning. In this video, I will give an introduction to OpenRefine. We're gonna look at how to create a new project in OpenRefine. We'll look at basic normalization and the different facets that OpenRefine provides, for example, for text, timeline, and even scatterplot. Then we'll focus on the main task of what we want to use OpenRefine for, namely for clustering and editing cells. But we'll also look at the operation history, which introduces an important notion called provenance. And in separate videos, we'll then look at how to install OpenRefine and also look at advanced operations. All right, let's jump right in. OpenRefine is a power tool for data wrangling, specifically for getting an overview of the data. Sometimes this is also called data profiling. It's also used for detecting and cleaning certain kinds of data errors, which is the main function that we want to use it here. But we can also transform data and link data to other sources. OpenRefine used to be called Google Refine, so you might find also some related material online, references and so on using the previous name. We're gonna be using two different kinds of datasets. The first dataset is from the USDA, the U.S. Department of Agriculture, and this is Directory of Farmers Markets. This dataset is smaller and seems to be a bit more curated or cleaner data than the second dataset which we will also be using. That is datasets from the New York Public Library. It is a collection of historic restaurant menus, and it has been crowdsourced. That means a lot of people have contributed to this dataset and therefore this dataset is rather messy. OK, let's look at our first dataset. The USDA Farmers Markets data. So the USDA Farmers Market data can be accessed directly from the website from the USDA. And in fact, you can use the data on the website itself. But what about if you would like to work with the data directly, that is, perform some analysis on the data that is not supported by the simple web UI? In this case, you can go to the site and download the data itself. So, you can find a button near the lower left and say Export to Excel, which will really download the dataset. Once you've download the data set, you can then import it to OpenRefine. So we assume you have already installed OpenRefine at this point. And then we will go to the corresponding link, say Create Project, and then choose files to upload into OpenRefine. When you import data, you are provided a number of options. For example, you can import comma-separated values files or tab-separated values files, but also other kinds of data can be imported. Most of the time, the defaults that OpenRefine sets for you are already working very well, but you might want to check those different options to see which one is more suitable for your dataset. You also should give your project a suitable name, and then you can start importing the data. In the case of the Farmers Market dataset, we will have imported 8,664 rows fairly easily. And we are now ready to get a first overview of that data. So one of the first things you want to try out is the Text Facet. It is the workhorse for OpenRefine and gives you an overview of what values appear in a certain column. So you select the column, for example, here, MarketName, and then you select Text Facet. And you will then see that there are 8,095 choices. Meaning there's 8,000, about 8,000 different values in the MarketName column. And we have overall 8,664 rows, so some of them seem to be the same. And we see, for example, the most frequent value here is El Mercado Familiar, so there are 33 of those values. If you hit the Cluster button, OpenRefine will now try to cluster all of these different values into groups that are similar to one another. And once you've done that, you'll see you're presented with a rather informative screen that shows here all these different clusters available. And they give you a first idea of what kind of dirty data you might encounter in that particular color. So if you look, for example, at the cluster near the middle, you'll see it has four different ways of spelling Irvington Farmers Market. Some of these values occur multiple times, and these are likely typos that were created at the time of data entry, and they're still in this dataset although it is fairly organized and curated. So we can now click the button and select Merge. And if you're brave, you can in fact merge all of the clusters if they look good to you after you've checked that all the clusters seem reasonable, and also the name on the right that's being suggested by OpenRefine is the one that you want to use as the canonical name. So if you hit Merge and Merge Selected and Re-Cluster, you will then be causing a mass edit of, in this case, over 600 cells. So with a single click of a button, you have normalized all these values in the MarketPlace column. You will also notice that you've reduced the number of different values in this MarketName column from 8,095 to now 7,846. So you have, in fact, these groups or clusters of values, they have been now unified and you have now larger counts here for the MarketName. In this particular case for this dataset, a single iteration through this clustering step and then merging will already get the job done. We're done with normalizing the MarketName column and no further clusters are found. In more messy datasets, you might find new clusters after an initial clustering step, and so we will have to iterate this process. Now, what if you wanna apply this operation again? Or, if you want to just see what has happened to your data? There is a very useful tab in OpenRefine called Extract Operation History. This provides a sort of provenance information. So you see on the left, you have done a mass edit of 659 cells, and you can select now to extract the particular operations that were done and then, apply them in a separate dataset, apply those to a separate dataset, or you can just use it for documentation to understand what it is that you've done to the data. So, let's take a look at other facets that allow us to get an overview or profile the data. Another powerful facet other than the Text Facet is the Timeline facet. The Timeline facet is being selected for columns, you selected for columns, that have data that looks like it's temporal data. So, for example, the updateTime is a column in this dataset, and you can try and apply the Timeline facet to it. However, when you do that you, will notice that there's a problem. OpenRefine has not detected any time values and instead has marked all the values, all 8,664, as non-temporal values. So this is happening because you forgot to cluster or not to cluster. So what you need to do first is you go back to the updateTime column and then you select Edit cells, Common transforms, and then you convert the column from text data from string data to the data type date. Once you've done that, OpenRefine indeed notices that there are 8,131 time values in this column, and there are only 533 values left that seem to be not convertible in an obvious manner to a date. So, overall, you have now converted the data type of more than 8,000 cells from string to time. And now you can go back and do the Time Facet. Once you've done the Time Facet, you now can look at different time slices and get an idea of what values are in your dataset. For example, if you take a time slice that covers 2010 and 2011, you will notice that there's a lot of data missing for those time slices. On the other hand, if you look at the time slice that includes 2012, you will now see that there's a lot more data available for those years. So we've seen how the Timeline facet is very useful to get an overview of the data. And now, we're gonna look at another facet called the Scatterplot Facet. In this case, we also need to first convert the string data to numeric data. So this has been done for the column x already, and now we're gonna do this for a second column called y. And we, again, select Edit cells, Common transforms, and then convert to number, this column y. And once we've done that, you will see that both columns, the x and the y column now have numeric data which is indicated by the color coding of the green values. This now has transformed over 8,000 values from string to number. So we're now ready to use the Scatterplot facet. If we do that, if we select Scatterplot facet, we see the facet on the left, and it shows us a rather interesting picture that seems to resemble the outline of the United States, the continental U.S., and indeed these seem to be the locations of all the farmers' markets contained in this dataset. We can also work with this dataset now, exporting it and importing it into other tools, so in this particular case, for example, we use Google Maps which allows us to easily import CSV files. And we see here the data that we just looked at in OpenRefine now imported into a Google map. And you will notice that these data points that were off the map, in fact, are apparently valid datasets. We see, for example, that Hawaii seems to have farmers' market, and so does Alaska. So, this creates some confidence in the data that we've seen here. But we also know that there are three rows that couldn't be shown on the map, so we will probably have to go back in an actual study and look at the OpenRefine data at these particular columns. All right. So now I'm gonna give a quick summary of what we have seen in this video. We created a new project with OpenRefine and then had some basic normalization tasks. We were also using facets for text, timeline, and scatterplot. And then focused really on the main cleaning operation, namely clustering and mass edits. We also had a quick look at the operation history, which give us a form of provenance of the data. In separate videos, we will then be looking at advanced operations and also how to install OpenRefine.