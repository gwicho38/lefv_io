1
00:00:00,000 --> 00:00:08,366
[MUSIC]

2
00:00:08,366 --> 00:00:09,810
Welcome back.

3
00:00:09,810 --> 00:00:12,560
Now let's briefly wrap up
what we covered this week.

4
00:00:12,560 --> 00:00:16,090
In the second week, we talked about the
roots of regular expressions in computer

5
00:00:16,090 --> 00:00:19,690
science theory, and we learned about
practical regular expressions as found for

6
00:00:19,690 --> 00:00:23,420
example in R, Python, Java or OpenRefine.

7
00:00:23,420 --> 00:00:26,680
And we then exercised our
regular expression skills

8
00:00:26,680 --> 00:00:29,900
on an interactive website that provides
you with immediate feedback so

9
00:00:29,900 --> 00:00:31,820
you can better understand
how your expressions work.

10
00:00:32,880 --> 00:00:36,763
By learning what regular expressions and
exercising your hands-on skills,

11
00:00:36,763 --> 00:00:39,997
you should now be able to situate
regular expressions among other

12
00:00:39,997 --> 00:00:42,366
formal languages in
computer science theory.

13
00:00:42,366 --> 00:00:46,806
And to define simple regular expressions
for example in Python, to extract or

14
00:00:46,806 --> 00:00:51,540
match data and check whether it conforms
to a certain desired or undesired format.

15
00:00:51,540 --> 00:00:52,040
Next week,

16
00:00:52,040 --> 00:00:56,540
we will learn about a popular power tool
for data cleaning called OpenRefine.

17
00:00:56,540 --> 00:00:59,770
Regular expressions are only
one of many features and

18
00:00:59,770 --> 00:01:04,088
capabilities that OpenRefine offers for
syntax based data cleaning.

19
00:01:04,088 --> 00:01:14,088
[MUSIC]