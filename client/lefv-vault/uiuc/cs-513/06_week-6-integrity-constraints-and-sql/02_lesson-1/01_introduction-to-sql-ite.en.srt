1
00:00:07,519 --> 00:00:12,080
And now, we're gonna switch over to our, sort of, crash course,

2
00:00:12,080 --> 00:00:13,820
if you like, introduction to SQL,

3
00:00:13,820 --> 00:00:15,804
and in particular using SQLite.

4
00:00:15,804 --> 00:00:18,839
So, I'm gonna, first, motivate a little bit why we're doing this,

5
00:00:18,839 --> 00:00:22,000
and then work through some examples.

6
00:00:22,000 --> 00:00:28,755
So, why are we using database research results in general and SQLite maybe in particular?

7
00:00:28,755 --> 00:00:31,899
So there's a lot of work has been done in this area.

8
00:00:31,899 --> 00:00:33,584
I mean databases are really ubiquitous.

9
00:00:33,584 --> 00:00:36,109
They're out there. They're used in the real world a lot.

10
00:00:36,109 --> 00:00:39,814
There's not only the fact that these are used a lot in practice,

11
00:00:39,814 --> 00:00:42,784
but there's also again the theory behind it, which is,

12
00:00:42,784 --> 00:00:46,034
you could argue, just as valuable or similarly valuable.

13
00:00:46,034 --> 00:00:47,329
So, from conceptual modeling,

14
00:00:47,329 --> 00:00:49,399
database normalization, data integration,

15
00:00:49,399 --> 00:00:51,500
data cleaning, integrity constraints,

16
00:00:51,500 --> 00:00:53,270
repair - there's a lot of work there.

17
00:00:53,270 --> 00:00:58,984
So, taking a database person's view on this really gives us a lot of mileage.

18
00:00:58,984 --> 00:01:00,600
So, the world runs on databases.

19
00:01:00,600 --> 00:01:02,839
For those of you interested in more research you think it's

20
00:01:02,839 --> 00:01:05,329
also intellectually satisfying and gratifying, I think.

21
00:01:05,329 --> 00:01:07,620
There's a lot of interesting research you can still do.

22
00:01:07,620 --> 00:01:09,650
SQLite is a nice,

23
00:01:09,650 --> 00:01:10,939
fun system to work with.

24
00:01:10,939 --> 00:01:13,040
It's not for all purposes.

25
00:01:13,040 --> 00:01:16,670
It has a sort of a niche that it occupies,

26
00:01:16,670 --> 00:01:21,650
basically using SQLite sort of personally in your personal environment,

27
00:01:21,650 --> 00:01:24,439
rather than in a server setting and so we'll see more of that.

28
00:01:24,439 --> 00:01:27,650
So, I'm going back to a slide that I showed earlier in

29
00:01:27,650 --> 00:01:32,084
this course where we see different integrity constraint violations. We remember them.

30
00:01:32,084 --> 00:01:33,859
We've now actually worked with some of them,

31
00:01:33,859 --> 00:01:39,245
checked them and even repaired them automatically or generated all possible solutions.

32
00:01:39,245 --> 00:01:42,170
And so again, these are things that we cannot fix,

33
00:01:42,170 --> 00:01:44,280
for example, with a tool like OpenRefine.

34
00:01:44,280 --> 00:01:46,489
But once we have, I mean, some of them we might,

35
00:01:46,489 --> 00:01:48,515
like this one, date of birth, this column, right?

36
00:01:48,515 --> 00:01:51,469
This is part of, you can use regular expressions to match that,

37
00:01:51,469 --> 00:01:55,370
maybe translate it; in OpenRefine,

38
00:01:55,370 --> 00:01:57,849
you can cluster, you can detect duplicates.

39
00:01:57,849 --> 00:01:59,734
Yeah? We've done that in OpenRefine.

40
00:01:59,734 --> 00:02:01,790
But then if you have complex relationship where

41
00:02:01,790 --> 00:02:05,060
what's written in one table affects what's in the other table,

42
00:02:05,060 --> 00:02:07,415
or even functional dependencies like here.

43
00:02:07,415 --> 00:02:13,120
We need databases. So, this is what we already have been looking at.

44
00:02:13,120 --> 00:02:17,025
So uniqueness constraints, different representations.

45
00:02:17,025 --> 00:02:21,629
There's all these different kinds of errors that we might have to deal with.

46
00:02:21,629 --> 00:02:24,784
Databases are also ubiquitous.

47
00:02:24,784 --> 00:02:27,189
I don't know whether I've shown this before,

48
00:02:27,189 --> 00:02:31,441
but this is a snapshot here that's out there about,

49
00:02:31,441 --> 00:02:33,314
I guess, chocolate raisins,

50
00:02:33,314 --> 00:02:35,680
and you see it has SQL in it.

51
00:02:35,680 --> 00:02:40,449
Select stuff from equipment table where equipment ID equals four.

52
00:02:40,449 --> 00:02:42,474
Assuming this is an actual picture,

53
00:02:42,474 --> 00:02:44,830
stuff like this happens in practice and this just

54
00:02:44,830 --> 00:02:47,530
means that somebody when they're, you know,

55
00:02:47,530 --> 00:02:50,245
trying to pull out an ingredients list or something,

56
00:02:50,245 --> 00:02:51,745
or in this case equipment,

57
00:02:51,745 --> 00:02:55,365
this product may contain - what is it - residues of or

58
00:02:55,365 --> 00:02:59,735
produced in a facility that also processes nuts.

59
00:02:59,735 --> 00:03:02,740
Right? For people who have allergy to nuts, for example.

60
00:03:02,740 --> 00:03:04,525
Who knows what that message was?

61
00:03:04,525 --> 00:03:06,025
But instead of the message,

62
00:03:06,025 --> 00:03:09,819
we get the SQL query that should have probably retrieved the message.

63
00:03:09,819 --> 00:03:12,905
So, this is an actual snapshot.

64
00:03:12,905 --> 00:03:15,250
If I look at the snapshot here,

65
00:03:15,250 --> 00:03:18,370
this is taken by myself a while ago.

66
00:03:18,370 --> 00:03:20,274
And I went to website,

67
00:03:20,274 --> 00:03:23,169
and there's all these SQL error messages.

68
00:03:23,169 --> 00:03:24,960
That doesn't look like an advertisement for SQL,

69
00:03:24,960 --> 00:03:27,414
but it shows that a lot of the web.

70
00:03:27,414 --> 00:03:30,960
When we go to webpage, what's behind the web is often a database server.

71
00:03:30,960 --> 00:03:33,250
In this case, some application broke.

72
00:03:33,250 --> 00:03:38,664
We can nicely either blame it on the web server that interacts with a,

73
00:03:38,664 --> 00:03:41,792
maybe, database back end or some somewhere in between or,

74
00:03:41,792 --> 00:03:43,750
of course, the database itself might have a problem.

75
00:03:43,750 --> 00:03:46,680
It's hard to see from this who to point a finger at.

76
00:03:46,680 --> 00:03:48,574
Okay, so SQL is everywhere.

77
00:03:48,574 --> 00:03:53,069
SQLite is a rather unusual SQL database.

78
00:03:53,069 --> 00:03:55,840
It is a typically used databases, of course.

79
00:03:55,840 --> 00:03:59,280
You have a database server and then clients connect to the server and then

80
00:03:59,280 --> 00:04:03,064
lots of different users simultaneously can use the database and so on.

81
00:04:03,064 --> 00:04:06,935
SQLite, think of it more as your sort of personal database,

82
00:04:06,935 --> 00:04:09,680
so it's very different in terms of the architecture.

83
00:04:09,680 --> 00:04:12,504
But for our purposes in class, it's just fine.

84
00:04:12,504 --> 00:04:15,675
So there are situations where SQLite works really well.

85
00:04:15,675 --> 00:04:19,305
There's also examples where it doesn't work so well.

86
00:04:19,305 --> 00:04:21,639
But in embedded devices, internet of things.

87
00:04:21,639 --> 00:04:23,605
And also really this is, I think,

88
00:04:23,605 --> 00:04:26,329
an interesting different perspective.

89
00:04:26,329 --> 00:04:28,555
I'll say something about it in a moment,

90
00:04:28,555 --> 00:04:35,290
that you think of the underlying database format as an application file format, you know.

91
00:04:35,290 --> 00:04:38,394
You might all know or heard about things like XML

92
00:04:38,394 --> 00:04:41,959
and JSON and all these various exchange syntax.

93
00:04:41,959 --> 00:04:43,810
But then, if you work with the data,

94
00:04:43,810 --> 00:04:46,745
you're always left to work with the data in the application program.

95
00:04:46,745 --> 00:04:48,639
Maybe you have an XML parser.

96
00:04:48,639 --> 00:04:50,394
Maybe it ends up in an XML database,

97
00:04:50,394 --> 00:04:52,095
or you have a JSON parser.

98
00:04:52,095 --> 00:04:56,089
Easy to parse, but now you have an application that works with the data.

99
00:04:56,089 --> 00:04:58,959
If you decide to use SQLite for certain applications,

100
00:04:58,959 --> 00:05:01,595
you have a full-fledged database engine right there.

101
00:05:01,595 --> 00:05:04,389
So apparently, again, according to the advertisement,

102
00:05:04,389 --> 00:05:09,199
truth in advertisement, SQLite works across platforms on different systems,

103
00:05:09,199 --> 00:05:15,355
and you can then use it as a file format that has powerful query capabilities built in,

104
00:05:15,355 --> 00:05:18,545
query and analytical capabilities.

105
00:05:18,545 --> 00:05:20,650
So, if you look around on the website,

106
00:05:20,650 --> 00:05:24,649
you can see some sort of advertisement.

107
00:05:24,649 --> 00:05:27,969
I just thought, you know, whether you buy into this or not,

108
00:05:27,969 --> 00:05:29,769
it is a very convenient,

109
00:05:29,769 --> 00:05:32,470
little database that you can use for all purposes.

110
00:05:32,470 --> 00:05:35,305
I'll just want to point out a few quotes that I thought was

111
00:05:35,305 --> 00:05:39,160
interesting because there's in some sense sometimes also discussion,

112
00:05:39,160 --> 00:05:42,915
sort of the primacy of data versus code.

113
00:05:42,915 --> 00:05:44,483
You know, what's more important? Is the data more important?

114
00:05:44,483 --> 00:05:46,954
Is the code more important?

115
00:05:46,954 --> 00:05:50,029
Depends really on the kind of specific question that you have.

116
00:05:50,029 --> 00:05:52,930
But just to make you think about these things,

117
00:05:52,930 --> 00:05:54,639
I put a few quotes here.

118
00:05:54,639 --> 00:05:59,469
So there's a legendary book on software engineering called the "Mythical

119
00:05:59,469 --> 00:06:06,264
Man-Month" and it talks about how representations are the essence of programming.

120
00:06:06,264 --> 00:06:09,160
So, and the quote here specifically says,

121
00:06:09,160 --> 00:06:12,355
"Show me your flow charts and conceal your tables,

122
00:06:12,355 --> 00:06:14,949
and I shall continue to be mystified.

123
00:06:14,949 --> 00:06:16,060
Show me your tables,

124
00:06:16,060 --> 00:06:18,252
and I won't usually need your flowcharts;

125
00:06:18,252 --> 00:06:19,769
they will be obvious."

126
00:06:19,769 --> 00:06:23,470
So, in a way, this makes a point about, you know,

127
00:06:23,470 --> 00:06:26,105
code is all good and makes everything run,

128
00:06:26,105 --> 00:06:28,899
but it's often the data that you really need to have a good understanding

129
00:06:28,899 --> 00:06:31,679
of to really understand what's going on.

130
00:06:31,679 --> 00:06:38,654
Rob Pike in "Rules of Programming" has a similar quote here, "Data dominates.

131
00:06:38,654 --> 00:06:41,449
If you've chosen the right data structures and organized things well,

132
00:06:41,449 --> 00:06:44,120
the algorithms will almost always be self-evident.

133
00:06:44,120 --> 00:06:45,855
Data structures, not algorithms,

134
00:06:45,855 --> 00:06:47,995
are central to programming."

135
00:06:47,995 --> 00:06:49,560
Well, this is a strong statement.

136
00:06:49,560 --> 00:06:55,560
You know your algorithms prof might disagree and so,

137
00:06:55,560 --> 00:06:59,167
but it is an interesting perspective.

138
00:06:59,167 --> 00:07:01,750
And then another fellow who you may or

139
00:07:01,750 --> 00:07:04,689
may not agree with but I'll just put the quote here -- Linus Torvalds,

140
00:07:04,689 --> 00:07:07,699
Torvalds of Linux fame.

141
00:07:07,699 --> 00:07:10,050
He said, "Bad programmers worry about the code.

142
00:07:10,050 --> 00:07:13,675
Good programmers worry about data structures and their relationships."

143
00:07:13,675 --> 00:07:17,439
That was just to give you a little bit of different perspective on life, if nothing else.

144
00:07:17,439 --> 00:07:20,964
All right. So where is SQL found? Basically everywhere.

145
00:07:20,964 --> 00:07:22,910
In this room, there's probably at this moment,

146
00:07:22,910 --> 00:07:24,819
I bet, a dozen,

147
00:07:24,819 --> 00:07:29,514
50 instances of SQLite running right now.

148
00:07:29,514 --> 00:07:32,024
Might be on your smart watch.

149
00:07:32,024 --> 00:07:34,009
It's suddenly on your smartphone.

150
00:07:34,009 --> 00:07:35,870
It's in your web browser that you use right now.

151
00:07:35,870 --> 00:07:38,894
It's everywhere. So you are running SQLite right now.

152
00:07:38,894 --> 00:07:41,009
Okay. So, that's good to know.

153
00:07:41,009 --> 00:07:44,295
So, check it out.

154
00:07:44,295 --> 00:07:48,239
This is some numbers from the creator of SQLite,

155
00:07:48,239 --> 00:07:51,535
but I don't think we need to get into this.

156
00:07:51,535 --> 00:07:53,080
For a little bit database system,

157
00:07:53,080 --> 00:07:54,970
it has actually quite powerful features.

158
00:07:54,970 --> 00:07:58,204
It has, of course, things like keys and indexes

159
00:07:58,204 --> 00:08:02,675
and even things like spatial indexes and so on.

160
00:08:02,675 --> 00:08:05,269
But it has limitations, too.

161
00:08:05,269 --> 00:08:09,250
64-way joins normally, if as a human write your queries,

162
00:08:09,250 --> 00:08:13,485
64 joins or 64-way joins are fairly large.

163
00:08:13,485 --> 00:08:16,745
But sometimes you have applications where queries are generated by a program,

164
00:08:16,745 --> 00:08:18,750
then this could actually be a real limitation.

165
00:08:18,750 --> 00:08:20,060
But, for our purposes,

166
00:08:20,060 --> 00:08:22,759
this is not gonna be so bad.

167
00:08:22,759 --> 00:08:25,339
So this would be also some system that I would encourage you to

168
00:08:25,339 --> 00:08:28,235
use in maybe in your project.

169
00:08:28,235 --> 00:08:33,139
So maybe you know already Postgres or mySQL or another database system, Oracle.

170
00:08:33,139 --> 00:08:35,990
But just to get another perspective,

171
00:08:35,990 --> 00:08:37,809
maybe even if you know another database system,

172
00:08:37,809 --> 00:08:40,629
you want to try this out in your project at the end.

173
00:08:40,629 --> 00:08:43,750
Okay. So let's look right into it.

174
00:08:43,750 --> 00:08:45,919
Oh, by the way, different date formats is something

175
00:08:45,919 --> 00:08:48,320
that's always an issue with data quality.

176
00:08:48,320 --> 00:08:52,740
Right? We know that dates can be represented in different ways.

177
00:08:52,740 --> 00:08:53,870
And when we consume data,

178
00:08:53,870 --> 00:08:58,044
we get big headaches about trying to align the data,

179
00:08:58,044 --> 00:08:59,840
get it into a canonical form.

180
00:08:59,840 --> 00:09:05,705
Dates are of course so important that SQLite also has different ways to expose,

181
00:09:05,705 --> 00:09:09,184
you know, print out, if you like, the date.

182
00:09:09,184 --> 00:09:11,434
So there's different formats.

183
00:09:11,434 --> 00:09:19,455
Another quote, Eric Busboom says "I proposed to my wife in SQLite.

184
00:09:19,455 --> 00:09:20,679
It's just that awesome."

185
00:09:20,679 --> 00:09:23,840
I don't know somebody's a little exaggerating, maybe.

186
00:09:23,840 --> 00:09:27,039
All right. You can also, if use Firefox as a browser,

187
00:09:27,039 --> 00:09:28,549
there's a plug-in for it.

188
00:09:28,549 --> 00:09:29,892
So I'm gonna use, in a moment,

189
00:09:29,892 --> 00:09:32,039
SQLite from the command line.

190
00:09:32,039 --> 00:09:35,725
Like, I like that kind of flexibility of the command line,

191
00:09:35,725 --> 00:09:37,909
but some of you might prefer to have, sort of,

192
00:09:37,909 --> 00:09:40,190
a more graphical user interface,

193
00:09:40,190 --> 00:09:43,879
and the nice thing is there's a plug-in for Firefox,

194
00:09:43,879 --> 00:09:48,129
in particular, there might be other for other browsers as well.

195
00:09:48,129 --> 00:09:50,235
So you can use SQLite from the browser.

196
00:09:50,235 --> 00:09:52,549
So I'll just walk you through a couple of screenshots.

197
00:09:52,549 --> 00:09:56,730
You would start by customizing your extensions,

198
00:09:56,730 --> 00:10:01,855
and hopefully you'll find a SQLite manager that you can search as an extension.

199
00:10:01,855 --> 00:10:05,539
You can edit. You might want to actually move it up there to

200
00:10:05,539 --> 00:10:11,230
your toolbar so that you have SQLite as a little Firefox extension there, ready for you.

201
00:10:11,230 --> 00:10:12,889
And then you have, you know,

202
00:10:12,889 --> 00:10:16,625
some nice icons that tell you a little bit what you can do.

203
00:10:16,625 --> 00:10:19,309
Maybe open a database,

204
00:10:19,309 --> 00:10:21,789
create new ones, run queries, and so on.

205
00:10:21,789 --> 00:10:28,129
So here's an example from a database that comes from an example from another,

206
00:10:28,129 --> 00:10:32,570
sort of, crash course that we gave on using SQLite.

207
00:10:32,570 --> 00:10:35,870
You can import, for example, CSV files.

208
00:10:35,870 --> 00:10:38,014
How do you get your data initially into a database?

209
00:10:38,014 --> 00:10:40,187
One way to do it is if you have a CSV file,

210
00:10:40,187 --> 00:10:41,764
comma separated values file.

211
00:10:41,764 --> 00:10:44,389
Something maybe you export from Excel, and say, okay,

212
00:10:44,389 --> 00:10:47,059
now I wanna work in a database with it.

213
00:10:47,059 --> 00:10:48,894
You can make it import that.

214
00:10:48,894 --> 00:10:52,269
You can also do this from the command line, you know.

215
00:10:52,269 --> 00:10:54,585
Maybe we will have an example of that as well.

216
00:10:54,585 --> 00:10:56,299
Once you have the data there,

217
00:10:56,299 --> 00:10:57,950
again in the Firefox browser,

218
00:10:57,950 --> 00:11:01,710
things look fairly as you would expect them.

219
00:11:01,710 --> 00:11:03,304
You have, for example,

220
00:11:03,304 --> 00:11:05,059
you see also through the color coding,

221
00:11:05,059 --> 00:11:08,710
you get a little extra features here with

222
00:11:08,710 --> 00:11:12,620
missing data and then given data and then sort of special,

223
00:11:12,620 --> 00:11:16,220
the row ID, numeric data, has a little different color.

224
00:11:16,220 --> 00:11:18,404
So you can work quite nicely with the system,

225
00:11:18,404 --> 00:11:20,893
so you can explore the different tables of this data;

226
00:11:20,893 --> 00:11:25,080
this particular database has maybe two different tables here.

227
00:11:25,080 --> 00:11:26,566
Number of tables is two.

228
00:11:26,566 --> 00:11:29,235
You can select a table.

229
00:11:29,235 --> 00:11:30,870
You see also here, yeah,

230
00:11:30,870 --> 00:11:33,059
because of the color coding, you see interesting.

231
00:11:33,059 --> 00:11:35,509
Get an overview of what's in your database.

232
00:11:35,509 --> 00:11:37,460
See the number of rows.

233
00:11:37,460 --> 00:11:39,195
And then you can run simple queries.

234
00:11:39,195 --> 00:11:40,814
So, for example, here we say,

235
00:11:40,814 --> 00:11:41,990
we run a simple SQL query.

236
00:11:41,990 --> 00:11:47,220
We'll do an example in a moment with another simple database.

237
00:11:47,220 --> 00:11:49,327
So much for advertisement for using the system,

238
00:11:49,327 --> 00:11:50,605
what we're gonna be using,

239
00:11:50,605 --> 00:11:56,044
and now we're gonna walk through an example that you can then also drill down further,

240
00:11:56,044 --> 00:11:58,649
so if offline you can work with that.

241
00:11:58,649 --> 00:12:03,289
There's an organization called Software Carpentry that tries to teach

242
00:12:03,289 --> 00:12:08,450
certain skills including programming but also database querying,

243
00:12:08,450 --> 00:12:11,990
data issues to the masses,

244
00:12:11,990 --> 00:12:15,934
if you like, to scientists who are not necessarily computer scientists or programmers.

245
00:12:15,934 --> 00:12:20,120
And so they have very nice material that we can make use of here for our purposes,

246
00:12:20,120 --> 00:12:26,139
and in particular, I'm gonna jump into this topic of using databases and SQL.