1
00:00:00,000 --> 00:00:08,245
[MUSIC]

2
00:00:08,245 --> 00:00:11,630
Hello, and welcome back to Theory and
Practice of Data Cleaning.

3
00:00:11,630 --> 00:00:14,850
In previous lectures, we looked at the
relational model, and we saw how we can

4
00:00:14,850 --> 00:00:19,170
use relational queries in an elegant
rule language called data log.

5
00:00:19,170 --> 00:00:22,060
We also use data log rules for
checking data integrity.

6
00:00:22,060 --> 00:00:26,550
It is we use so called denial constraints
to detect and report integrity violations.

7
00:00:26,550 --> 00:00:31,250
In the following lectures we will move to
most widely used query language of all

8
00:00:31,250 --> 00:00:32,030
which is SQL.

9
00:00:33,030 --> 00:00:35,350
In this course we will
use an easy to install,

10
00:00:35,350 --> 00:00:39,810
lightweight database engine called
SQLite, for our exercises.

11
00:00:39,810 --> 00:00:43,300
SQLite is particularly popular for
embedded devices.

12
00:00:43,300 --> 00:00:46,955
For example, running right now in
your smart phone, your game consoles,

13
00:00:46,955 --> 00:00:49,435
smart TV, car, web browser, you name it.

14
00:00:49,435 --> 00:00:54,070
Because SQLite requires no server
administration unlike databases used for

15
00:00:54,070 --> 00:00:55,725
multi-user applications.

16
00:00:55,725 --> 00:01:00,695
It is also an ideal tool for the data
scientist who needs to integrity checking,

17
00:01:00,695 --> 00:01:04,900
data profiling and querying and
even some basic data analytics itself.

18
00:01:04,900 --> 00:01:08,680
In the next lectures, I will give
an introduction to SQLite and then a brief

19
00:01:08,680 --> 00:01:12,830
crash course to SQLite using some
publicly available data sets inquiries.

20
00:01:12,830 --> 00:01:14,610
After working through
this week's materials and

21
00:01:14,610 --> 00:01:17,580
the associated assignment,
you should be able to formulate and

22
00:01:17,580 --> 00:01:20,130
execute simple queries and
integrity constraints in SQL.

23
00:01:21,180 --> 00:01:24,270
Some of the examples in
the assignment will look familiar and

24
00:01:24,270 --> 00:01:25,850
this is no accident.

25
00:01:25,850 --> 00:01:29,790
You will be able to see how the integrity
constraints we used earlier in data log

26
00:01:29,790 --> 00:01:32,440
can be formulated also in SQL.

27
00:01:32,440 --> 00:01:34,261
Okay, let's jump right
into the first lecture.

28
00:01:34,261 --> 00:01:41,852
[MUSIC]

29
00:01:41,852 --> 00:01:45,752
[SOUND]