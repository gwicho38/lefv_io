1
00:00:00,024 --> 00:00:08,727
[MUSIC]

2
00:00:08,727 --> 00:00:12,780
If you ask the question, what workflow
tools are most scientists using?

3
00:00:12,780 --> 00:00:15,870
Well, there are a couple workflow systems
out there and they are being used.

4
00:00:15,870 --> 00:00:20,296
But a much larger set of people are using
somewhat more down to Earth tools like

5
00:00:20,296 --> 00:00:21,807
Python, R, and MATLAB.

6
00:00:21,807 --> 00:00:23,135
And there are various reasons for that.

7
00:00:23,135 --> 00:00:26,780
First of all, that's much more
material out to learn these things.

8
00:00:26,780 --> 00:00:30,010
And there's a general purpose,
when you learn how to use R in Python,

9
00:00:30,010 --> 00:00:32,230
you can use it for lots of other things.

10
00:00:32,230 --> 00:00:34,110
And also there's a sort
of sense of empowerment.

11
00:00:34,110 --> 00:00:37,090
If you know how to do stuff,
it doesn't feel like you

12
00:00:37,090 --> 00:00:41,490
have to learn this brand new system that
has its very own way of doing things.

13
00:00:41,490 --> 00:00:44,410
You can use something that
you already kind of know and

14
00:00:44,410 --> 00:00:45,530
make incremental progress.

15
00:00:45,530 --> 00:00:49,229
So there's many good reasons why Python,
R, and

16
00:00:49,229 --> 00:00:54,590
MATLAB and so on are very,
very well adapted and part tools.

17
00:00:54,590 --> 00:00:56,190
But on the other hand,
they're not workflow systems, so

18
00:00:56,190 --> 00:00:58,660
some of the benefits,
where is my workflow diagram?

19
00:00:58,660 --> 00:00:59,860
Where is my provenance support?

20
00:00:59,860 --> 00:01:04,140
You have to add these to it, okay?

21
00:01:05,170 --> 00:01:10,019
So, a few years ago,
we noticed that seeing how

22
00:01:10,019 --> 00:01:14,142
high the adoption is of systems like R and

23
00:01:14,142 --> 00:01:18,400
Python for putting workflows together.

24
00:01:20,300 --> 00:01:23,480
We sort of corrected our course
a little bit to say okay,

25
00:01:23,480 --> 00:01:26,180
it's great if you've workflow system
that works for you, it's wonderful.

26
00:01:26,180 --> 00:01:27,730
But what if you don't?

27
00:01:27,730 --> 00:01:29,630
So much logic customer base for

28
00:01:29,630 --> 00:01:33,990
our tools that if we look at people
who use R and Python and so on.

29
00:01:35,880 --> 00:01:41,190
So here's a project, a research project
that NSF, funded research project that

30
00:01:44,460 --> 00:01:47,320
kicking into gear now and quite active.

31
00:01:47,320 --> 00:01:50,700
It's called SKOPE, Synthesized Knowledge
of Past Environments.

32
00:01:50,700 --> 00:01:52,590
And what the scientists there do,

33
00:01:52,590 --> 00:01:55,000
you can think of them as
computational archaeologists.

34
00:01:55,000 --> 00:02:00,640
They try to understand what
happened about in the year 1300.

35
00:02:00,640 --> 00:02:01,648
For example,

36
00:02:01,648 --> 00:02:07,200
there were these migrations of Pueblo
Indians in the South West of the US.

37
00:02:07,200 --> 00:02:10,650
They kind of moved round and
certain villages were abandoned and

38
00:02:10,650 --> 00:02:11,880
it try to understand this.

39
00:02:11,880 --> 00:02:16,790
A part of the hypothesis there is that,
in those years,

40
00:02:16,790 --> 00:02:18,880
in certain years, climate has changed.

41
00:02:18,880 --> 00:02:22,030
So that maybe they're crop refilling or

42
00:02:22,030 --> 00:02:25,950
they needed to trade more with
the other tribes that were nearby.

43
00:02:25,950 --> 00:02:29,240
So, that's the whole
archaeological side of things, but

44
00:02:29,240 --> 00:02:33,620
then there's also sort of
climate science side of things.

45
00:02:33,620 --> 00:02:39,530
And so what is important for
them is to try to retrodict, so that

46
00:02:39,530 --> 00:02:44,120
was called paleoclimate, understand what
the climate will say a thousand years ago.

47
00:02:44,120 --> 00:02:45,860
And how can they do this?

48
00:02:45,860 --> 00:02:46,960
Well, we have climate models.

49
00:02:46,960 --> 00:02:53,460
We have computational science models
that can simulate basically climate.

50
00:02:53,460 --> 00:02:57,330
But we need to also feed it
with some observational data.

51
00:02:57,330 --> 00:03:00,140
So we have only indirect observational
data from those days, right?

52
00:03:00,140 --> 00:03:01,970
Nobody was in the 1300s.

53
00:03:01,970 --> 00:03:06,560
People were not keeping strict
records of precipitation and

54
00:03:06,560 --> 00:03:09,770
temperature, imagine 1300s, not likely.

55
00:03:09,770 --> 00:03:13,110
In the southwest of the US,
not likely either, but

56
00:03:13,110 --> 00:03:15,130
we have tree-ring data from those years.

57
00:03:15,130 --> 00:03:21,100
So there are trees and tree ring databases
that give us some proxy data that tell us,

58
00:03:21,100 --> 00:03:23,290
okay, this was a warm year probably.

59
00:03:23,290 --> 00:03:26,570
This was a wet year because
depending on how warm and

60
00:03:26,570 --> 00:03:30,940
wet a year is,
a tree will grow more or less.

61
00:03:30,940 --> 00:03:33,270
So from the tree rings, you can do this.

62
00:03:33,270 --> 00:03:38,910
And this is a really active area of signs.

63
00:03:38,910 --> 00:03:42,890
And so these fellows take these tree
ring databases, put them together,

64
00:03:42,890 --> 00:03:45,180
integrate them, and
feed some climate models.

65
00:03:45,180 --> 00:03:51,400
And they can create these wonderful
plots that basically make estimates what

66
00:03:51,400 --> 00:03:56,610
based on the data how dry or wet or
warm or cold a particular region was.

67
00:03:58,180 --> 00:04:00,070
What do they do for that?

68
00:04:00,070 --> 00:04:03,530
They don't use a workflow system,
they use R, okay.

69
00:04:03,530 --> 00:04:10,800
So use the R script and now I want to
look at, well, is there climate science?

70
00:04:10,800 --> 00:04:13,800
Is there computational
archaeology that they're doing?

71
00:04:14,840 --> 00:04:16,790
Can I reproduce this finding?

72
00:04:16,790 --> 00:04:17,690
Can I explain it?

73
00:04:17,690 --> 00:04:19,070
What data sets are they using?

74
00:04:19,070 --> 00:04:20,485
What parameters are they using and so on?

75
00:04:20,485 --> 00:04:24,026
Okay, so this is the kind of
an excellent use case for

76
00:04:24,026 --> 00:04:26,689
us to try out some technologies there.

77
00:04:28,220 --> 00:04:31,500
So here's the particular article or

78
00:04:31,500 --> 00:04:33,880
one of several articles that
these folks have written.

79
00:04:34,910 --> 00:04:38,690
And again, not surprisingly, they have
these charts and plots and so on.

80
00:04:38,690 --> 00:04:40,580
And there are papers.

81
00:04:40,580 --> 00:04:46,950
And they're good data scientists
in that they share their code too.

82
00:04:46,950 --> 00:04:50,550
So you can download the code and
you can redo this.

83
00:04:50,550 --> 00:04:54,670
But we feel that sometimes you
need to know a little bit more

84
00:04:54,670 --> 00:04:56,115
than just sharing the code.

85
00:04:56,115 --> 00:04:57,961
Sharing the workflow itself and

86
00:04:57,961 --> 00:05:01,386
then asking questions about
what depends on what and so on.

87
00:05:01,386 --> 00:05:07,113
And so we've begun to use or develop
a tool that supports scientists who

88
00:05:07,113 --> 00:05:12,810
write scripts and give them some
of the benefits of workflows.

89
00:05:12,810 --> 00:05:18,090
So if you recall, I had summarize of the
point of workflows was to help automation,

90
00:05:18,090 --> 00:05:20,540
scaling, abstraction, and provenance.

91
00:05:20,540 --> 00:05:22,660
Yeah, this is a course view of the world.

92
00:05:26,440 --> 00:05:28,110
How do you call these things?

93
00:05:28,110 --> 00:05:32,460
The customer rating of scripts.

94
00:05:32,460 --> 00:05:35,520
Well, scripts are good at automating
things that is what scripts are for,

95
00:05:35,520 --> 00:05:38,840
scaling, you have some extra work.

96
00:05:38,840 --> 00:05:41,770
You have to use your own libraries and
write your own code.

97
00:05:41,770 --> 00:05:43,890
Abstraction, not so much.

98
00:05:43,890 --> 00:05:48,750
All right, I mean script does what
it does quite well typically.

99
00:05:48,750 --> 00:05:54,030
But looking at that code, it's not so
clear, especially if it's not the author.

100
00:05:54,030 --> 00:05:57,690
Even as an author you might find
this difficult after months.

101
00:05:57,690 --> 00:06:00,252
But as somebody who's not the author,

102
00:06:00,252 --> 00:06:03,905
you might not really know is
the script the right for me?

103
00:06:03,905 --> 00:06:06,810
And then again provenance
support is also limited.

104
00:06:06,810 --> 00:06:10,480
So the idea was, can we create

105
00:06:10,480 --> 00:06:15,080
a workflow diagram from a script which
would help with the abstraction?

106
00:06:15,080 --> 00:06:18,780
Because now we have a high-level view,
a conceptual view of the script.

107
00:06:18,780 --> 00:06:21,380
That shows us what are the data elements,
what are the steps and

108
00:06:21,380 --> 00:06:22,210
how do they connect up.

109
00:06:23,610 --> 00:06:25,540
And then maybe we can also
have some provenance support,

110
00:06:25,540 --> 00:06:29,240
maybe we can look at the workflow
graph itself, ask questions of it.

111
00:06:29,240 --> 00:06:30,580
What depends on what.

112
00:06:30,580 --> 00:06:33,860
And then we can also compare it with the
retrospective provenance we've collected.

113
00:06:33,860 --> 00:06:36,800
And all of that is now available for
scripts, if only we knew how.

114
00:06:38,540 --> 00:06:44,120
So we've begun to develop a tool,
it's called YesWorkflow.

115
00:06:45,230 --> 00:06:51,000
It started as a grassroots effort from,
we had this idea using

116
00:06:51,000 --> 00:06:55,330
different projects where we
kind of tried to provide these

117
00:06:55,330 --> 00:06:59,540
projects with some support for provenance
and workflow support for scripts.

118
00:07:01,210 --> 00:07:06,870
And so
let me show you briefly how that goes and

119
00:07:06,870 --> 00:07:08,610
then I'll go into more detail next time.

120
00:07:08,610 --> 00:07:11,050
Actually, let me fast
forward here a little bit.

121
00:07:12,550 --> 00:07:14,930
So this is our goal here.

122
00:07:14,930 --> 00:07:17,230
So we have a script.

123
00:07:17,230 --> 00:07:22,160
We throw in annotations into the script,
so it

124
00:07:22,160 --> 00:07:26,969
is not really possible to automatically
extract a workflow diagram from a script.

125
00:07:28,570 --> 00:07:31,010
At least not the conceptual
workflow diagram.

126
00:07:31,010 --> 00:07:35,990
There's just certain things that
[INAUDIBLE] mismatch of what's being

127
00:07:35,990 --> 00:07:39,710
described by the code and
the way you think about the code.

128
00:07:39,710 --> 00:07:41,230
You can always say well,
why can't I automatic?

129
00:07:41,230 --> 00:07:42,640
Just automatically analyze the script.

130
00:07:42,640 --> 00:07:44,560
First of all,
it's very hard to automatically

131
00:07:44,560 --> 00:07:46,230
analyze any programming language.

132
00:07:46,230 --> 00:07:48,360
That's the radical reasons we
know from computer science.

133
00:07:48,360 --> 00:07:52,256
Non-trivial properties like termination
for example, are generally undesirable.

134
00:07:52,256 --> 00:07:57,110
So there's very hard theoretical
barrier to what we can do with

135
00:07:57,110 --> 00:07:59,880
prosthetic analysis and
it's hard in general.

136
00:07:59,880 --> 00:08:01,890
But more importantly or
in this particular case,

137
00:08:01,890 --> 00:08:05,200
it's also again,
how you think about your script.

138
00:08:05,200 --> 00:08:06,718
That's just not in the script itself.

139
00:08:06,718 --> 00:08:11,588
Maybe you thought one thing and the script
does it in a certain, contrived way.

140
00:08:11,588 --> 00:08:14,610
But you want to communicate the simple
way, the way you've thought about it.

141
00:08:14,610 --> 00:08:18,030
And you don't want to talk about
variables and if then analysis and

142
00:08:18,030 --> 00:08:20,522
function calls and
low-level data structures.

143
00:08:20,522 --> 00:08:22,890
You want to talk about the big picture, so

144
00:08:22,890 --> 00:08:25,490
somebody can appreciate what
it is that you're doing.

145
00:08:25,490 --> 00:08:27,530
And decide maybe they
want to reuse the method or

146
00:08:27,530 --> 00:08:28,860
do something similar or different.

147
00:08:30,220 --> 00:08:32,030
And that's what we do with
this YesWorkflow tools.

148
00:08:32,030 --> 00:08:34,570
The scientist puts these annotations,

149
00:08:35,930 --> 00:08:38,240
we call them YesWorkFlow
annotations in this script.

150
00:08:38,240 --> 00:08:41,090
And then the tool creates a graph for
me and then we can query this graph and

151
00:08:41,090 --> 00:08:42,230
continue to work with it.

152
00:08:43,650 --> 00:08:49,450
So here is a simple diagram that was
created by this clever agent here,

153
00:08:49,450 --> 00:08:50,210
Kyle Bocinsky.

154
00:08:50,210 --> 00:08:54,640
Who is this computational archaeologist
and he makes little advertisement there.

155
00:08:54,640 --> 00:08:59,540
He says, took me about 20 minutes to
comment or model my script as a work for

156
00:08:59,540 --> 00:09:02,090
one of several of many scripts.

157
00:09:02,090 --> 00:09:06,430
And so once you got the hang of it,
it's rather easy.

158
00:09:06,430 --> 00:09:16,430
[MUSIC]